require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");
const cheerio = require("cheerio");
const request = require("request");
const token = process.env.botid;
let key = process.env.pkey;

const bot = new TelegramBot(token, { polling: true });

bot.onText(/\/echo (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const resp = match[1];
  bot.sendMessage(chatId, resp);
});
bot.on("message", (msg) => {
  // 환율 시작
  const money =
    "https://quotation-api-cdn.dunamu.com/v1/forex/recent?codes=FRX.KRWUSD";
  fetch(money)
    .then((response) => response.json())
    .then((data) => {
      if (text == "환율") {
        bot.sendMessage(
          chatId,
          "환율정보 " +
            "\n" +
            data[0].currencyCode +
            "\n" +
            data[0].name +
            "\n" +
            "날짜 : " +
            data[0].date +
            "\n" +
            "현재시간 : " +
            data[0].time +
            "\n" +
            "현재환율 : 1달러 = " +
            data[0].basePrice +
            "원 \n" +
            "고가 : " +
            data[0].highPrice +
            "원\n" +
            "저가 : " +
            data[0].lowPrice +
            "원"
        );
      }
    }); // 환율 끝

  // 미세먼지 시작
  const url =
    "http://apis.data.go.kr/6260000/AirQualityInfoService/getAirQualityInfoClassifiedByStation?serviceKey=" +
    key +
    "&pageNo=1&numOfRows=10&resultType=json";
  // console.log(url);
  request(url, (e, res, body) => {
    const rst = JSON.parse(body);
    const _ = rst.getAirQualityInfoClassifiedByStation.body.items.item[3];
    if (text == "미세먼지") {
      bot.sendMessage(chatId, `초미세먼지 : ${_.pm25} \n미세먼지 : ${_.pm10}`);
    }
  });
  // 미세먼지 끝

  // 영화순위 시작
  const movie = "https://movie.daum.net/ranking/reservation";
  axios.get(movie).then((res) => {
    let $ = cheerio.load(res.data);
    let lank = [];
    if (text == "영화순위") {
      bot.sendMessage(
        chatId,
        "영화\n" +
          $(".link_txt").each(function () {
            lank.push($(this).text());
            console.log($(this).text().trim());
          }) +
          lank.forEach((v, i) => {
            if (i < 10) console.log(`${i + 1}위:${v.trim()}`);
          })
      );
    }
  });

  // 식단
  // const rise =
  //   "https://www.pusan.ac.kr/kor/CMS/MenuMgr/menuListOnBuilding.do?mCode=MN202";
  // axios.get(rise).then((res) => {
  //   let $ = cheerio.load(res.data);
  //   let menu = [],
  //     day = [],
  //     date = [];
  //   if (text == "식단") {
  //     bot.sendMessage(
  //       chatId,
  //       "부산대학교 식단\n" +
  //         $(".menu-tit01~p").each(function () {
  //           day.push($(this).text());
  //           // console.log($(this).text());
  //         })
  //     );
  //   }
  // });

  const text = msg.text;
  const chatId = msg.chat.id;
  console.log(msg);

  const date = new Date();
  if (text == "현재시간") {
    bot.sendMessage(chatId, date.toLocaleString());
  }
});

// 아침수업
setInterval(() => {
  const date = new Date();
  const curTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
  if (curTime == "09:20:0") {
    const money =
      "https://quotation-api-cdn.dunamu.com/v1/forex/recent?codes=FRX.KRWUSD";
    fetch(money)
      .then((response) => response.json())
      .then((data) => {
        bot.sendMessage(
          -679408568,
          "환율정보 " +
            "\n" +
            data[0].currencyCode +
            "\n" +
            data[0].name +
            "\n" +
            "날짜 : " +
            data[0].date +
            "\n" +
            "현재시간 : " +
            data[0].time +
            "\n" +
            "현재환율 : 1달러 = " +
            data[0].basePrice +
            "원 \n" +
            "고가 : " +
            data[0].highPrice +
            "원\n" +
            "저가 : " +
            data[0].lowPrice +
            "원"
        );
      });
  }
}, 1000);

// 점심시간
setInterval(() => {
  const date = new Date();
  const curTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
  if (curTime == "13:00:0") {
    const url =
      "http://apis.data.go.kr/6260000/AirQualityInfoService/getAirQualityInfoClassifiedByStation?serviceKey=" +
      key +
      "&pageNo=1&numOfRows=10&resultType=json";
    request(url, (e, res, body) => {
      const rst = JSON.parse(body);
      const _ = rst.getAirQualityInfoClassifiedByStation.body.items.item[3];
      bot.sendMessage(
        -679408568,
        `점 심 시 간 @@ \n\n현재 미세먼지 \n초미세먼지 : ${_.pm25} \n미세먼지 : ${_.pm10}`
      );
    });
  }
}, 1000);

// 집가기전
setInterval(() => {
  const date = new Date();
  const curTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;
  if (curTime == "17:45:0") {
    bot.sendMessage(-679408568, "집 갑 시 다");
  }
}, 1000);
